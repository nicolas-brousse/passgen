#!/usr/bin/env sh

set -e

usage() {
    local binfile=`basename $0`
    echo "Usage: $binfile [-l 0-9] [-n 0-9] [-q] decent|strong|hard" 1>&2;
    exit 1
}

say() {
    if [ ! "$quiet" = true ]; then
        echo $1
    fi
}

error() {
    echo $1
    echo ""
    usage
}

# Generate password
genpasswd() {
    LC_CTYPE=C tr -dc ${chars} < /dev/urandom | head -c ${length} | xargs
}

# Default values
occurences=1
quiet=false

# Options
while getopts 'l:n:q' opt; do
    case $opt in
        'l')
            if ! echo $OPTARG | egrep -q '^[0-9]+$'; then
                error '-l must be an integer'
            fi
            length=${OPTARG}
            ;;
        'n')
            if ! echo $OPTARG | egrep -q '^[0-9]+$'; then
                error '-n must be an integer'
            fi
            occurences=${OPTARG}
            ;;
        'q')
            quiet=true
            ;;
        *)
            error "'${opt}' is not a valid argument!"
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "$1" ]; then
    usage
fi

# Types of passwords
case $1 in
    'decent')
        [ -z "$length" ] && length=10
        chars='A-Za-z0-9'
        ;;
    'strong')
        [ -z "$length" ] && length=15
        chars='A-Za-z0-9_-+='
        ;;
    'hard')
        [ -z "$length" ] && length=40
        chars='A-Za-z0-9_\!\@\#\$\%\^\&\*\(\)\{\}\[\]\;\~\<\>\-\+='
        ;;
    *)
        echo "'${1}' is not a valid type of password!"
        echo ""
        usage
        ;;
esac

if [ ! "$occurences" -eq "1" ]; then
    say "> Generate $occurences occurences of '$1' password with $length characters"
else
    say "> Generate '$1' password with $length characters"
fi

say ""

for i in $(seq 1 ${occurences})
do
    genpasswd $chars $length
done

say ""
